{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/antoniopapa/dev/youtube/search/next-search/pages/backend.js\";\nimport React, { useEffect, useState } from 'react';\nimport Layout from \"../components/Layout\";\nimport Products from \"../components/Products\";\n\nconst Backend = () => {\n  const {\n    0: products,\n    1: setProducts\n  } = useState([]);\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    s: '',\n    sort: '',\n    page: 1\n  });\n  const lastPage = useState(0);\n  useEffect(() => {\n    (async () => {\n      const arr = [];\n\n      if (filters.s) {\n        arr.push(`s=${filters.s}`);\n      }\n\n      if (filters.sort) {\n        arr.push(`sort=${filters.sort}`);\n      }\n\n      if (filters.page) {\n        arr.push(`page=${filters.page}`);\n      }\n\n      const response = await fetch(`http://localhost:8000/api/products/backend?${arr.join('&')}`);\n      const content = await response.json();\n      setProducts(filters.page === 1 ? content.data : [...products, ...content.data]);\n    })();\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Products, {\n      products: products,\n      filters: filters,\n      setFilters: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Backend;","map":{"version":3,"sources":["/Users/antoniopapa/dev/youtube/search/next-search/pages/backend.js"],"names":["React","useEffect","useState","Layout","Products","Backend","products","setProducts","filters","setFilters","s","sort","page","lastPage","arr","push","response","fetch","join","content","json","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC;AACnCQ,IAAAA,CAAC,EAAE,EADgC;AAEnCC,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,IAAI,EAAE;AAH6B,GAAD,CAAtC;AAKA,QAAMC,QAAQ,GAAGX,QAAQ,CAAC,CAAD,CAAzB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KACI,YAAY;AACR,YAAMa,GAAG,GAAG,EAAZ;;AAEA,UAAIN,OAAO,CAACE,CAAZ,EAAe;AACXI,QAAAA,GAAG,CAACC,IAAJ,CAAU,KAAIP,OAAO,CAACE,CAAE,EAAxB;AACH;;AAED,UAAIF,OAAO,CAACG,IAAZ,EAAkB;AACdG,QAAAA,GAAG,CAACC,IAAJ,CAAU,QAAOP,OAAO,CAACG,IAAK,EAA9B;AACH;;AAED,UAAIH,OAAO,CAACI,IAAZ,EAAkB;AACdE,QAAAA,GAAG,CAACC,IAAJ,CAAU,QAAOP,OAAO,CAACI,IAAK,EAA9B;AACH;;AAED,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CH,GAAG,CAACI,IAAJ,CAAS,GAAT,CAAc,EAA7D,CAA5B;AAEA,YAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAtB;AAEAb,MAAAA,WAAW,CAACC,OAAO,CAACI,IAAR,KAAiB,CAAjB,GAAqBO,OAAO,CAACE,IAA7B,GAAoC,CAAC,GAAGf,QAAJ,EAAc,GAAGa,OAAO,CAACE,IAAzB,CAArC,CAAX;AACH,KArBL;AAuBH,GAxBQ,EAwBN,CAACb,OAAD,CAxBM,CAAT;AA0BA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEF,QAApB;AAA8B,MAAA,OAAO,EAAEE,OAAvC;AAAgD,MAAA,UAAU,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCD;;AA0CA,eAAeJ,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Layout from \"../components/Layout\";\nimport Products from \"../components/Products\";\n\nconst Backend = () => {\n    const [products, setProducts] = useState([]);\n    const [filters, setFilters] = useState({\n        s: '',\n        sort: '',\n        page: 1\n    });\n    const lastPage = useState(0)\n\n    useEffect(() => {\n        (\n            async () => {\n                const arr = [];\n\n                if (filters.s) {\n                    arr.push(`s=${filters.s}`);\n                }\n\n                if (filters.sort) {\n                    arr.push(`sort=${filters.sort}`);\n                }\n\n                if (filters.page) {\n                    arr.push(`page=${filters.page}`);\n                }\n\n                const response = await fetch(`http://localhost:8000/api/products/backend?${arr.join('&')}`);\n\n                const content = await response.json();\n\n                setProducts(filters.page === 1 ? content.data : [...products, ...content.data]);\n            }\n        )()\n    }, [filters]);\n\n    return (\n        <Layout>\n            <Products products={products} filters={filters} setFilters={setFilters}/>\n        </Layout>\n    );\n};\n\nexport default Backend;\n"]},"metadata":{},"sourceType":"module"}