{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/antoniopapa/dev/youtube/search/next-search/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/antoniopapa/dev/youtube/search/next-search/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/antoniopapa/dev/youtube/search/next-search/pages/backend.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Layout from \"../components/Layout\";\nimport Products from \"../components/Products\";\n\nvar Backend = function Backend() {\n  _s();\n\n  var _useState = useState([]),\n      products = _useState[0],\n      setProducts = _useState[1];\n\n  var _useState2 = useState({\n    s: ''\n  }),\n      filters = _useState2[0],\n      setFilters = _useState2[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var arr, response, content;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              arr = [];\n\n              if (filters.s) {\n                arr.push(\"s=\".concat(filters.s));\n              }\n\n              _context.next = 4;\n              return fetch(\"http://localhost:8000/api/products/backend?\".concat(arr.join('&')));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              content = _context.sent;\n              setProducts(content.data);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Products, {\n      products: products,\n      filters: filters,\n      setFilters: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Backend, \"Z9oxlyXCifJwj1kN1NeqTDcPAjU=\");\n\n_c = Backend;\nexport default Backend;\n\nvar _c;\n\n$RefreshReg$(_c, \"Backend\");","map":{"version":3,"sources":["/Users/antoniopapa/dev/youtube/search/next-search/pages/backend.js"],"names":["React","useEffect","useState","Layout","Products","Backend","products","setProducts","s","filters","setFilters","arr","push","fetch","join","response","json","content","data"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBACcH,QAAQ,CAAC,EAAD,CADtB;AAAA,MACXI,QADW;AAAA,MACDC,WADC;;AAAA,mBAEYL,QAAQ,CAAC;AACnCM,IAAAA,CAAC,EAAE;AADgC,GAAD,CAFpB;AAAA,MAEXC,OAFW;AAAA,MAEFC,UAFE;;AAMlBT,EAAAA,SAAS,CAAC,YAAM;AACZ,6DACI;AAAA;AAAA;AAAA;AAAA;AAAA;AACUU,cAAAA,GADV,GACgB,EADhB;;AAGI,kBAAIF,OAAO,CAACD,CAAZ,EAAe;AACXG,gBAAAA,GAAG,CAACC,IAAJ,aAAcH,OAAO,CAACD,CAAtB;AACH;;AALL;AAAA,qBAO2BK,KAAK,sDAA+CF,GAAG,CAACG,IAAJ,CAAS,GAAT,CAA/C,EAPhC;;AAAA;AAOUC,cAAAA,QAPV;AAAA;AAAA,qBAS0BA,QAAQ,CAACC,IAAT,EAT1B;;AAAA;AASUC,cAAAA,OATV;AAWIV,cAAAA,WAAW,CAACU,OAAO,CAACC,IAAT,CAAX;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAeH,GAhBQ,EAgBN,CAACT,OAAD,CAhBM,CAAT;AAkBA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEH,QAApB;AAA8B,MAAA,OAAO,EAAEG,OAAvC;AAAgD,MAAA,UAAU,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CA7BD;;GAAML,O;;KAAAA,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Layout from \"../components/Layout\";\nimport Products from \"../components/Products\";\n\nconst Backend = () => {\n    const [products, setProducts] = useState([]);\n    const [filters, setFilters] = useState({\n        s: ''\n    });\n\n    useEffect(() => {\n        (\n            async () => {\n                const arr = [];\n\n                if (filters.s) {\n                    arr.push(`s=${filters.s}`);\n                }\n\n                const response = await fetch(`http://localhost:8000/api/products/backend?${arr.join('&')}`);\n\n                const content = await response.json();\n\n                setProducts(content.data);\n            }\n        )()\n    }, [filters])\n\n    return (\n        <Layout>\n            <Products products={products} filters={filters} setFilters={setFilters}/>\n        </Layout>\n    );\n};\n\nexport default Backend;\n"]},"metadata":{},"sourceType":"module"}